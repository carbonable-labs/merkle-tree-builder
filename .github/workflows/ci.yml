name: CI/CD

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  # Rust CI
  rust:
    name: Rust CI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('merkle_tree_rust/Cargo.lock') }}

      - name: Check Rust formatting
        run: cargo fmt --manifest-path merkle_tree_rust/Cargo.toml -- --check

      - name: Lint Rust code
        run: cargo clippy --manifest-path merkle_tree_rust/Cargo.toml -- -D warnings

      - name: Run Rust tests
        run: cargo test --manifest-path merkle_tree_rust/Cargo.toml --verbose

      - name: Generate Rust coverage
        run: |
          cargo install cargo-tarpaulin
          cargo tarpaulin --manifest-path merkle_tree_rust/Cargo.toml --out Xml

      - name: Upload Rust coverage
        uses: codecov/codecov-action@v3

  # Cairo Build
  cairo_build:
    name: Cairo Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Scarb
        uses: software-mansion/setup-scarb@v1

      - name: Cairo lint
        run: |
          cd merkle_tree_cairo
          scarb fmt --check

      - name: Cairo build
        run: |
          cd merkle_tree_cairo
          scarb build

  # Cairo Tests
  cairo_tests:
    name: Cairo Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Scarb
        uses: software-mansion/setup-scarb@v1

      - name: Setup snfoundry
        uses: foundry-rs/setup-snfoundry@v3

      - name: Run Cairo tests
        run: |
          cd merkle_tree_cairo
          scarb test
